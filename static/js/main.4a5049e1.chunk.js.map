{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","completed","title","TodoList","todos","map","username","getUser","userId","usersFromServer","find","DEFAULT_FORM","App","useState","toDoList","setToDoList","data","setData","titleError","setTitleError","userSelectError","setUserSelectError","action","method","onSubmit","event","preventDefault","taskUser","taskId","sort","a","b","length","htmlFor","type","placeholder","value","onChange","Data","target","Number","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a5049e1.chunk.js","sourcesContent":["import { User } from '../../types/user';\n\ninterface Userinfo {\n  user: User\n}\n\nexport const UserInfo = ({ user }: Userinfo) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import { UserInfo } from '../UserInfo/UserInfo';\nimport { Todo } from '../../types/todo';\n\ntype ToDosType = {\n  todo: Todo\n};\n\nexport const TodoInfo = ({ todo }: ToDosType) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={`TodoInfo ${todo.completed ? 'TodoInfo--completed' : ''}`}\n    >\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n      {todo.user ? <UserInfo key={todo.id} user={todo.user} /> : null}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/todo';\n\ntype ToDosType = {\n  todos: Todo[]\n};\n\nexport const TodoList = ({ todos }: ToDosType) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => <TodoInfo todo={todo} key={todo.id} />)}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\n\nimport { FormEventHandler, useState } from 'react';\nimport { TodoList } from './components/TodoList/TodoList';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './types/user';\nimport { Todo } from './types/todo';\nimport { Form } from './types/form';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nconst DEFAULT_FORM = {\n  title: '',\n  userId: 0,\n};\n\nexport const App = () => {\n  const [toDoList, setToDoList] = useState<Todo[]>(todos);\n  const [data, setData] = useState<Form>(DEFAULT_FORM);\n  const [titleError, setTitleError] = useState<boolean>(false);\n  const [userSelectError, setUserSelectError] = useState<boolean>(false);\n\n  const handleInputChange:\n  React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    setData(Data => ({ ...Data, title: event.target.value }));\n    setTitleError(false);\n  };\n\n  const handleSelectChange:\n  React.ChangeEventHandler<HTMLSelectElement> = (event) => {\n    if (Number(+event.target.value)) {\n      setData(Data => ({ ...Data, userId: +event.target.value }));\n      setUserSelectError(false);\n    }\n  };\n\n  const handleSubmit: FormEventHandler = (event) => {\n    event.preventDefault();\n\n    if (!data.title) {\n      setTitleError(true);\n    }\n\n    if (!data.userId) {\n      setUserSelectError(true);\n    }\n\n    if (!data.title || !data.userId) {\n      return;\n    }\n\n    const taskUser = getUser(data.userId);\n    const taskId = [...toDoList].sort((a, b) => a.id - b.id);\n\n    setToDoList(() => ([...toDoList,\n      {\n        ...data,\n        id: taskId[toDoList.length - 1].id + 1,\n        completed: false,\n        user: taskUser,\n      }]));\n\n    setData(DEFAULT_FORM);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/todos\" method=\"POST\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            type=\"text\"\n            placeholder=\"Enter a title\"\n            data-cy=\"titleInput\"\n            value={data.title}\n            onChange={handleInputChange}\n          />\n          {titleError\n          && (<span className=\"error\">Please enter a title</span>)}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"title\">User: </label>\n          <select\n            id=\"userId\"\n            value={data.userId}\n            data-cy=\"userSelect\"\n            onChange={handleSelectChange}\n          >\n            <option value={0} disabled>Choose a user</option>\n            {usersFromServer.map(user => {\n              return (\n                <option\n                  key={user.id}\n                  value={user.id}\n                >\n                  {user.name}\n\n                </option>\n              );\n            })}\n          </select>\n\n          {userSelectError\n          && (<span className=\"error\">Please choose a user</span>)}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={toDoList} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}